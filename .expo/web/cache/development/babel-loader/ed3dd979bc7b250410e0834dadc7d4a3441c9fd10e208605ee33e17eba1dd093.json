{"ast":null,"code":"import React, { useMemo, useEffect, useCallback, useContext } from \"react\";\nimport { useAnimatedReaction, useDerivedValue, useSharedValue } from \"react-native-reanimated\";\nimport { State as GestureState } from \"react-native-gesture-handler\";\nimport { useProps } from \"./propsContext\";\nvar AnimatedValueContext = React.createContext(undefined);\nexport default function AnimatedValueProvider(_ref) {\n  var children = _ref.children;\n  var value = useSetupAnimatedValues();\n  return React.createElement(AnimatedValueContext.Provider, {\n    value: value\n  }, children);\n}\nexport function useAnimatedValues() {\n  var value = useContext(AnimatedValueContext);\n  if (!value) {\n    throw new Error(\"useAnimatedValues must be called from within AnimatedValueProvider!\");\n  }\n  return value;\n}\nvar _worklet_13005196629804_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    activeIndexAnim\\n  } = this._closure;\\n  return activeIndexAnim.value;\\n}\",\n  location: \"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"activeIndexAnim\\\",\\\"_closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\\\"],\\\"mappings\\\":\\\"AAkDsB,SAAAA,SAAMA,CAAA;EAAA;IAAAC;EAAA,SAAAC,QAAA;EACxB,OAAOD,eAAe,CAACE,KAAK;AAC9B\\\"}\"\n};\nvar _worklet_11279003350438_init_data = {\n  code: \"function anonymous(cur, prev) {\\n  const {\\n    scrollInit,\\n    scrollOffset,\\n    outerScrollInit,\\n    outerScrollOffset\\n  } = this._closure;\\n  if (cur !== prev && cur >= 0) {\\n    scrollInit.value = scrollOffset.value;\\n    outerScrollInit.value = outerScrollOffset.value;\\n  }\\n}\",\n  location: \"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"cur\\\",\\\"prev\\\",\\\"scrollInit\\\",\\\"scrollOffset\\\",\\\"outerScrollInit\\\",\\\"outerScrollOffset\\\",\\\"_closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\\\"],\\\"mappings\\\":\\\"AAoDK,SAACA,SAAKA,CAAAC,GAAS,EAAAC,IAAA;EAAA;IAAAC,UAAA;IAAAC,YAAA;IAAAC,eAAA;IAAAC;EAAA,SAAAC,QAAA;EAChB,IAAIN,GAAG,KAAKC,IAAI,IAAID,GAAG,IAAI,CAAC,EAAE;IAC5BE,UAAU,CAACK,KAAK,GAAGJ,YAAY,CAACI,KAAK;IACrCH,eAAe,CAACG,KAAK,GAAGF,iBAAiB,CAACE,KAAK;EACjD;AACF\\\"}\"\n};\nvar _worklet_14819725827228_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    isTouchActiveNative,\\n    activeIndexAnim\\n  } = this._closure;\\n  return isTouchActiveNative.value && activeIndexAnim.value >= 0;\\n}\",\n  location: \"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"isTouchActiveNative\\\",\\\"activeIndexAnim\\\",\\\"_closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\\\"],\\\"mappings\\\":\\\"AA2DyC,SAAAA,SAAMA,CAAA;EAAA;IAAAC,mBAAA;IAAAC;EAAA,SAAAC,QAAA;EAC3C,OAAOF,mBAAmB,CAACG,KAAK,IAAIF,eAAe,CAACE,KAAK,IAAI,CAAC;AAChE\\\"}\"\n};\nvar _worklet_16497113047978_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    isDraggingCell,\\n    scrollOffset,\\n    scrollInit,\\n    outerScrollOffset,\\n    outerScrollInit\\n  } = this._closure;\\n  if (!isDraggingCell.value) return 0;\\n  const innerScrollDiff = scrollOffset.value - scrollInit.value;\\n  const outerScrollDiff = outerScrollOffset.value - outerScrollInit.value;\\n  const scrollDiff = innerScrollDiff + outerScrollDiff;\\n  return scrollDiff;\\n}\",\n  location: \"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"isDraggingCell\\\",\\\"scrollOffset\\\",\\\"scrollInit\\\",\\\"outerScrollOffset\\\",\\\"outerScrollInit\\\",\\\"_closure\\\",\\\"value\\\",\\\"innerScrollDiff\\\",\\\"outerScrollDiff\\\",\\\"scrollDiff\\\"],\\\"sources\\\":[\\\"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\\\"],\\\"mappings\\\":\\\"AA8D6C,SAAAA,SAAMA,CAAA;EAAA;IAAAC,cAAA;IAAAC,YAAA;IAAAC,UAAA;IAAAC,iBAAA;IAAAC;EAAA,SAAAC,QAAA;EAC/C,IAAI,CAACL,cAAc,CAACM,KAAK,EAAE,OAAO,CAAC;EACnC,MAAMC,eAAe,GAAGN,YAAY,CAACK,KAAK,GAAGJ,UAAU,CAACI,KAAK;EAE7D,MAAME,eAAe,GAAGL,iBAAiB,CAACG,KAAK,GAAGF,eAAe,CAACE,KAAK;EACvE,MAAMG,UAAU,GAAGF,eAAe,GAAGC,eAAe;EACpD,OAAOC,UAAU;AACnB\\\"}\"\n};\nvar _worklet_15572345453531_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    isTouchActiveNative,\\n    autoScrollDistance,\\n    touchTranslate\\n  } = this._closure;\\n  const extraTranslate = isTouchActiveNative.value ? autoScrollDistance.value : 0;\\n  return touchTranslate.value + extraTranslate;\\n}\",\n  location: \"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"isTouchActiveNative\\\",\\\"autoScrollDistance\\\",\\\"touchTranslate\\\",\\\"_closure\\\",\\\"extraTranslate\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\\\"],\\\"mappings\\\":\\\"AAsE4C,SAAAA,SAAMA,CAAA;EAAA;IAAAC,mBAAA;IAAAC,kBAAA;IAAAC;EAAA,SAAAC,QAAA;EAC9C,MAAMC,cAAc,GAAGJ,mBAAmB,CAACK,KAAK,GAAGJ,kBAAkB,CAACI,KAAK,GAAG,CAAC;EAC/E,OAAOH,cAAc,CAACG,KAAK,GAAGD,cAAc;AAC9C\\\"}\"\n};\nvar _worklet_11178686329850_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    containerSize,\\n    activeCellSize,\\n    scrollOffset,\\n    touchPositionDiff,\\n    activeCellOffset,\\n    scrollViewSize,\\n    isTouchActiveNative\\n  } = this._closure;\\n  const containerMinusActiveCell = containerSize.value - activeCellSize.value + scrollOffset.value;\\n  const offsetRelativeToScrollTop = touchPositionDiff.value + activeCellOffset.value;\\n  const constrained = Math.min(containerMinusActiveCell, Math.max(scrollOffset.value, offsetRelativeToScrollTop));\\n  const maxTranslateNegative = -activeCellOffset.value;\\n  const maxTranslatePositive = scrollViewSize.value - (activeCellOffset.value + activeCellSize.value);\\n  const constrainedBase = isTouchActiveNative.value ? constrained - activeCellOffset.value : touchPositionDiff.value;\\n  return Math.min(Math.max(constrainedBase, maxTranslateNegative), maxTranslatePositive);\\n}\",\n  location: \"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"containerSize\\\",\\\"activeCellSize\\\",\\\"scrollOffset\\\",\\\"touchPositionDiff\\\",\\\"activeCellOffset\\\",\\\"scrollViewSize\\\",\\\"isTouchActiveNative\\\",\\\"_closure\\\",\\\"containerMinusActiveCell\\\",\\\"value\\\",\\\"offsetRelativeToScrollTop\\\",\\\"constrained\\\",\\\"Math\\\",\\\"min\\\",\\\"max\\\",\\\"maxTranslateNegative\\\",\\\"maxTranslatePositive\\\",\\\"constrainedBase\\\"],\\\"sources\\\":[\\\"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\\\"],\\\"mappings\\\":\\\"AA0EuD,SAAAA,SAAMA,CAAA;EAAA;IAAAC,aAAA;IAAAC,cAAA;IAAAC,YAAA;IAAAC,iBAAA;IAAAC,gBAAA;IAAAC,cAAA;IAAAC;EAAA,SAAAC,QAAA;EACzD,MAAMC,wBAAwB,GAAGR,aAAa,CAACS,KAAK,GAAGR,cAAc,CAACQ,KAAK,GAAGP,YAAY,CAACO,KAAK;EAChG,MAAMC,yBAAyB,GAAGP,iBAAiB,CAACM,KAAK,GAAGL,gBAAgB,CAACK,KAAK;EAClF,MAAME,WAAW,GAAGC,IAAI,CAACC,GAAG,CAACL,wBAAwB,EAAEI,IAAI,CAACE,GAAG,CAACZ,YAAY,CAACO,KAAK,EAAEC,yBAAyB,CAAC,CAAC;EAC/G,MAAMK,oBAAoB,GAAG,CAACX,gBAAgB,CAACK,KAAK;EACpD,MAAMO,oBAAoB,GAAGX,cAAc,CAACI,KAAK,IAAIL,gBAAgB,CAACK,KAAK,GAAGR,cAAc,CAACQ,KAAK,CAAC;EAGnG,MAAMQ,eAAe,GAAGX,mBAAmB,CAACG,KAAK,GAAGE,WAAW,GAAGP,gBAAgB,CAACK,KAAK,GAAGN,iBAAiB,CAACM,KAAK;EAElH,OAAOG,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACG,eAAe,EAAEF,oBAAoB,CAAC,EAAEC,oBAAoB,CAAC;AACxF\\\"}\"\n};\nvar _worklet_4690435836593_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    activeIndexAnim,\\n    props,\\n    touchPositionDiff,\\n    touchPositionDiffConstrained\\n  } = this._closure;\\n  if (activeIndexAnim.value < 0) return 0;\\n  return props.dragItemOverflow ? touchPositionDiff.value : touchPositionDiffConstrained.value;\\n}\",\n  location: \"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"activeIndexAnim\\\",\\\"props\\\",\\\"touchPositionDiff\\\",\\\"touchPositionDiffConstrained\\\",\\\"_closure\\\",\\\"value\\\",\\\"dragItemOverflow\\\"],\\\"sources\\\":[\\\"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\\\"],\\\"mappings\\\":\\\"AAsFoC,SAAAA,SAAMA,CAAA;EAAA;IAAAC,eAAA;IAAAC,KAAA;IAAAC,iBAAA;IAAAC;EAAA,SAAAC,QAAA;EACtC,IAAIJ,eAAe,CAACK,KAAK,GAAG,CAAC,EAAE,OAAO,CAAC;EACvC,OAAOJ,KAAK,CAACK,gBAAgB,GAAGJ,iBAAiB,CAACG,KAAK,GAAGF,4BAA4B,CAACE,KAAK;AAC9F\\\"}\"\n};\nvar _worklet_955041255044_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    hoverAnim,\\n    activeCellOffset\\n  } = this._closure;\\n  return hoverAnim.value + activeCellOffset.value;\\n}\",\n  location: \"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"hoverAnim\\\",\\\"activeCellOffset\\\",\\\"_closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\\\"],\\\"mappings\\\":\\\"AA0FsC,SAAAA,SAAMA,CAAA;EAAA;IAAAC,SAAA;IAAAC;EAAA,SAAAC,QAAA;EACxC,OAAOF,SAAS,CAACG,KAAK,GAAGF,gBAAgB,CAACE,KAAK;AACjD\\\"}\"\n};\nvar _worklet_2312494774690_init_data = {\n  code: \"function anonymous() {\\n  const {\\n    activeIndexAnim,\\n    spacerIndexAnim\\n  } = this._closure;\\n  const isHovering = activeIndexAnim.value >= 0;\\n  if (!isHovering && spacerIndexAnim.value >= 0) {\\n    spacerIndexAnim.value = -1;\\n  }\\n}\",\n  location: \"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"activeIndexAnim\\\",\\\"spacerIndexAnim\\\",\\\"_closure\\\",\\\"isHovering\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.js\\\"],\\\"mappings\\\":\\\"AA6FkB,SAAAA,SAAMA,CAAA;EAAA;IAAAC,eAAA;IAAAC;EAAA,SAAAC,QAAA;EAEpB,MAAMC,UAAU,GAAGH,eAAe,CAACI,KAAK,IAAI,CAAC;EAE7C,IAAI,CAACD,UAAU,IAAIF,eAAe,CAACG,KAAK,IAAI,CAAC,EAAE;IAC7CH,eAAe,CAACG,KAAK,GAAG,CAAC,CAAC;EAC5B;AACF\\\"}\"\n};\nfunction useSetupAnimatedValues() {\n  var props = useProps();\n  var DEFAULT_VAL = useSharedValue(0);\n  var containerSize = useSharedValue(0);\n  var scrollViewSize = useSharedValue(0);\n  var panGestureState = useSharedValue(GestureState.UNDETERMINED);\n  var touchTranslate = useSharedValue(0);\n  var isTouchActiveNative = useSharedValue(false);\n  var hasMoved = useSharedValue(0);\n  var disabled = useSharedValue(false);\n  var horizontalAnim = useSharedValue(!!props.horizontal);\n  var activeIndexAnim = useSharedValue(-1);\n  var spacerIndexAnim = useSharedValue(-1);\n  var activeCellSize = useSharedValue(0);\n  var activeCellOffset = useSharedValue(0);\n  var scrollOffset = useSharedValue(0);\n  var scrollInit = useSharedValue(0);\n  var viewableIndexMin = useSharedValue(0);\n  var viewableIndexMax = useSharedValue(0);\n  var outerScrollOffset = props.outerScrollOffset || DEFAULT_VAL;\n  var outerScrollInit = useSharedValue(0);\n  useAnimatedReaction(function () {\n    var _e = [new global.Error(), -2, -27];\n    var _f = function _f() {\n      return activeIndexAnim.value;\n    };\n    _f._closure = {\n      activeIndexAnim: activeIndexAnim\n    };\n    _f.__initData = _worklet_13005196629804_init_data;\n    _f.__workletHash = 13005196629804;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), function () {\n    var _e = [new global.Error(), -5, -27];\n    var _f = function _f(cur, prev) {\n      if (cur !== prev && cur >= 0) {\n        scrollInit.value = scrollOffset.value;\n        outerScrollInit.value = outerScrollOffset.value;\n      }\n    };\n    _f._closure = {\n      scrollInit: scrollInit,\n      scrollOffset: scrollOffset,\n      outerScrollInit: outerScrollInit,\n      outerScrollOffset: outerScrollOffset\n    };\n    _f.__initData = _worklet_11279003350438_init_data;\n    _f.__workletHash = 11279003350438;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), [outerScrollOffset]);\n  var placeholderOffset = useSharedValue(0);\n  var isDraggingCell = useDerivedValue(function () {\n    var _e = [new global.Error(), -3, -27];\n    var _f = function _f() {\n      return isTouchActiveNative.value && activeIndexAnim.value >= 0;\n    };\n    _f._closure = {\n      isTouchActiveNative: isTouchActiveNative,\n      activeIndexAnim: activeIndexAnim\n    };\n    _f.__initData = _worklet_14819725827228_init_data;\n    _f.__workletHash = 14819725827228;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), []);\n  var autoScrollDistance = useDerivedValue(function () {\n    var _e = [new global.Error(), -6, -27];\n    var _f = function _f() {\n      if (!isDraggingCell.value) return 0;\n      var innerScrollDiff = scrollOffset.value - scrollInit.value;\n      var outerScrollDiff = outerScrollOffset.value - outerScrollInit.value;\n      var scrollDiff = innerScrollDiff + outerScrollDiff;\n      return scrollDiff;\n    };\n    _f._closure = {\n      isDraggingCell: isDraggingCell,\n      scrollOffset: scrollOffset,\n      scrollInit: scrollInit,\n      outerScrollOffset: outerScrollOffset,\n      outerScrollInit: outerScrollInit\n    };\n    _f.__initData = _worklet_16497113047978_init_data;\n    _f.__workletHash = 16497113047978;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), []);\n  var touchPositionDiff = useDerivedValue(function () {\n    var _e = [new global.Error(), -4, -27];\n    var _f = function _f() {\n      var extraTranslate = isTouchActiveNative.value ? autoScrollDistance.value : 0;\n      return touchTranslate.value + extraTranslate;\n    };\n    _f._closure = {\n      isTouchActiveNative: isTouchActiveNative,\n      autoScrollDistance: autoScrollDistance,\n      touchTranslate: touchTranslate\n    };\n    _f.__initData = _worklet_15572345453531_init_data;\n    _f.__workletHash = 15572345453531;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), []);\n  var touchPositionDiffConstrained = useDerivedValue(function () {\n    var _e = [new global.Error(), -8, -27];\n    var _f = function _f() {\n      var containerMinusActiveCell = containerSize.value - activeCellSize.value + scrollOffset.value;\n      var offsetRelativeToScrollTop = touchPositionDiff.value + activeCellOffset.value;\n      var constrained = Math.min(containerMinusActiveCell, Math.max(scrollOffset.value, offsetRelativeToScrollTop));\n      var maxTranslateNegative = -activeCellOffset.value;\n      var maxTranslatePositive = scrollViewSize.value - (activeCellOffset.value + activeCellSize.value);\n      var constrainedBase = isTouchActiveNative.value ? constrained - activeCellOffset.value : touchPositionDiff.value;\n      return Math.min(Math.max(constrainedBase, maxTranslateNegative), maxTranslatePositive);\n    };\n    _f._closure = {\n      containerSize: containerSize,\n      activeCellSize: activeCellSize,\n      scrollOffset: scrollOffset,\n      touchPositionDiff: touchPositionDiff,\n      activeCellOffset: activeCellOffset,\n      scrollViewSize: scrollViewSize,\n      isTouchActiveNative: isTouchActiveNative\n    };\n    _f.__initData = _worklet_11178686329850_init_data;\n    _f.__workletHash = 11178686329850;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), []);\n  var hoverAnim = useDerivedValue(function () {\n    var _e = [new global.Error(), -5, -27];\n    var _f = function _f() {\n      if (activeIndexAnim.value < 0) return 0;\n      return props.dragItemOverflow ? touchPositionDiff.value : touchPositionDiffConstrained.value;\n    };\n    _f._closure = {\n      activeIndexAnim: activeIndexAnim,\n      props: props,\n      touchPositionDiff: touchPositionDiff,\n      touchPositionDiffConstrained: touchPositionDiffConstrained\n    };\n    _f.__initData = _worklet_4690435836593_init_data;\n    _f.__workletHash = 4690435836593;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), []);\n  var hoverOffset = useDerivedValue(function () {\n    var _e = [new global.Error(), -3, -27];\n    var _f = function _f() {\n      return hoverAnim.value + activeCellOffset.value;\n    };\n    _f._closure = {\n      hoverAnim: hoverAnim,\n      activeCellOffset: activeCellOffset\n    };\n    _f.__initData = _worklet_955041255044_init_data;\n    _f.__workletHash = 955041255044;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), [hoverAnim, activeCellOffset]);\n  useDerivedValue(function () {\n    var _e = [new global.Error(), -3, -27];\n    var _f = function _f() {\n      var isHovering = activeIndexAnim.value >= 0;\n      if (!isHovering && spacerIndexAnim.value >= 0) {\n        spacerIndexAnim.value = -1;\n      }\n    };\n    _f._closure = {\n      activeIndexAnim: activeIndexAnim,\n      spacerIndexAnim: spacerIndexAnim\n    };\n    _f.__initData = _worklet_2312494774690_init_data;\n    _f.__workletHash = 2312494774690;\n    _f.__stackDetails = _e;\n    _f.__version = \"3.3.0\";\n    return _f;\n  }(), []);\n  var resetTouchedCell = useCallback(function () {\n    activeCellOffset.value = 0;\n    hasMoved.value = 0;\n  }, []);\n  var value = useMemo(function () {\n    return {\n      activeCellOffset: activeCellOffset,\n      activeCellSize: activeCellSize,\n      activeIndexAnim: activeIndexAnim,\n      containerSize: containerSize,\n      disabled: disabled,\n      horizontalAnim: horizontalAnim,\n      hoverAnim: hoverAnim,\n      hoverOffset: hoverOffset,\n      isDraggingCell: isDraggingCell,\n      isTouchActiveNative: isTouchActiveNative,\n      panGestureState: panGestureState,\n      placeholderOffset: placeholderOffset,\n      resetTouchedCell: resetTouchedCell,\n      scrollOffset: scrollOffset,\n      scrollViewSize: scrollViewSize,\n      spacerIndexAnim: spacerIndexAnim,\n      touchPositionDiff: touchPositionDiff,\n      touchTranslate: touchTranslate,\n      autoScrollDistance: autoScrollDistance,\n      viewableIndexMin: viewableIndexMin,\n      viewableIndexMax: viewableIndexMax\n    };\n  }, [activeCellOffset, activeCellSize, activeIndexAnim, containerSize, disabled, horizontalAnim, hoverAnim, hoverOffset, isDraggingCell, isTouchActiveNative, panGestureState, placeholderOffset, resetTouchedCell, scrollOffset, scrollViewSize, spacerIndexAnim, touchPositionDiff, touchTranslate, autoScrollDistance, viewableIndexMin, viewableIndexMax]);\n  useEffect(function () {\n    var _props$onAnimValInit;\n    (_props$onAnimValInit = props.onAnimValInit) === null || _props$onAnimValInit === void 0 ? void 0 : _props$onAnimValInit.call(props, value);\n  }, [value]);\n  return value;\n}","map":{"version":3,"names":["React","useMemo","useEffect","useCallback","useContext","useAnimatedReaction","useDerivedValue","useSharedValue","State","GestureState","useProps","AnimatedValueContext","createContext","undefined","AnimatedValueProvider","_ref","children","value","useSetupAnimatedValues","createElement","Provider","useAnimatedValues","Error","_worklet_13005196629804_init_data","code","location","sourceMap","_worklet_11279003350438_init_data","_worklet_14819725827228_init_data","_worklet_16497113047978_init_data","_worklet_15572345453531_init_data","_worklet_11178686329850_init_data","_worklet_4690435836593_init_data","_worklet_955041255044_init_data","_worklet_2312494774690_init_data","props","DEFAULT_VAL","containerSize","scrollViewSize","panGestureState","UNDETERMINED","touchTranslate","isTouchActiveNative","hasMoved","disabled","horizontalAnim","horizontal","activeIndexAnim","spacerIndexAnim","activeCellSize","activeCellOffset","scrollOffset","scrollInit","viewableIndexMin","viewableIndexMax","outerScrollOffset","outerScrollInit","_e","global","_f","_closure","__initData","__workletHash","__stackDetails","__version","cur","prev","placeholderOffset","isDraggingCell","autoScrollDistance","innerScrollDiff","outerScrollDiff","scrollDiff","touchPositionDiff","extraTranslate","touchPositionDiffConstrained","containerMinusActiveCell","offsetRelativeToScrollTop","constrained","Math","min","max","maxTranslateNegative","maxTranslatePositive","constrainedBase","hoverAnim","dragItemOverflow","hoverOffset","isHovering","resetTouchedCell","_props$onAnimValInit","onAnimValInit","call"],"sources":["/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/animatedValueContext.tsx"],"sourcesContent":["import React, { useMemo, useEffect, useCallback, useContext } from \"react\";\nimport {\n  useAnimatedReaction,\n  useDerivedValue,\n  useSharedValue,\n} from \"react-native-reanimated\";\nimport { State as GestureState } from \"react-native-gesture-handler\";\nimport { useProps } from \"./propsContext\";\n\nconst AnimatedValueContext = React.createContext<\n  ReturnType<typeof useSetupAnimatedValues> | undefined\n>(undefined);\n\nexport default function AnimatedValueProvider({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const value = useSetupAnimatedValues();\n  return (\n    <AnimatedValueContext.Provider value={value}>\n      {children}\n    </AnimatedValueContext.Provider>\n  );\n}\n\nexport function useAnimatedValues() {\n  const value = useContext(AnimatedValueContext);\n  if (!value) {\n    throw new Error(\n      \"useAnimatedValues must be called from within AnimatedValueProvider!\"\n    );\n  }\n  return value;\n}\n\nfunction useSetupAnimatedValues<T>() {\n  const props = useProps<T>();\n\n  const DEFAULT_VAL = useSharedValue(0);\n\n  const containerSize = useSharedValue(0);\n  const scrollViewSize = useSharedValue(0);\n\n  const panGestureState = useSharedValue<GestureState>(\n    GestureState.UNDETERMINED\n  );\n  const touchTranslate = useSharedValue(0);\n\n  const isTouchActiveNative = useSharedValue(false);\n\n  const hasMoved = useSharedValue(0);\n  const disabled = useSharedValue(false);\n\n  const horizontalAnim = useSharedValue(!!props.horizontal);\n\n  const activeIndexAnim = useSharedValue(-1); // Index of hovering cell\n  const spacerIndexAnim = useSharedValue(-1); // Index of hovered-over cell\n\n  const activeCellSize = useSharedValue(0); // Height or width of acctive cell\n  const activeCellOffset = useSharedValue(0); // Distance between active cell and edge of container\n\n  const scrollOffset = useSharedValue(0);\n  const scrollInit = useSharedValue(0);\n\n  const viewableIndexMin = useSharedValue(0);\n  const viewableIndexMax = useSharedValue(0);\n\n  // If list is nested there may be an outer scrollview\n  const outerScrollOffset = props.outerScrollOffset || DEFAULT_VAL;\n  const outerScrollInit = useSharedValue(0);\n\n  useAnimatedReaction(\n    () => {\n      return activeIndexAnim.value;\n    },\n    (cur, prev) => {\n      if (cur !== prev && cur >= 0) {\n        scrollInit.value = scrollOffset.value;\n        outerScrollInit.value = outerScrollOffset.value;\n      }\n    },\n    [outerScrollOffset]\n  );\n\n  const placeholderOffset = useSharedValue(0);\n\n  const isDraggingCell = useDerivedValue(() => {\n    return isTouchActiveNative.value && activeIndexAnim.value >= 0;\n  }, []);\n\n  const autoScrollDistance = useDerivedValue(() => {\n    if (!isDraggingCell.value) return 0;\n    const innerScrollDiff = scrollOffset.value - scrollInit.value;\n    // If list is nested there may be an outer scroll diff\n    const outerScrollDiff = outerScrollOffset.value - outerScrollInit.value;\n    const scrollDiff = innerScrollDiff + outerScrollDiff;\n    return scrollDiff;\n  }, []);\n\n  const touchPositionDiff = useDerivedValue(() => {\n    const extraTranslate = isTouchActiveNative.value\n      ? autoScrollDistance.value\n      : 0;\n    return touchTranslate.value + extraTranslate;\n  }, []);\n\n  const touchPositionDiffConstrained = useDerivedValue(() => {\n    const containerMinusActiveCell =\n      containerSize.value - activeCellSize.value + scrollOffset.value;\n\n    const offsetRelativeToScrollTop =\n      touchPositionDiff.value + activeCellOffset.value;\n    const constrained = Math.min(\n      containerMinusActiveCell,\n      Math.max(scrollOffset.value, offsetRelativeToScrollTop)\n    );\n\n    const maxTranslateNegative = -activeCellOffset.value;\n    const maxTranslatePositive =\n      scrollViewSize.value - (activeCellOffset.value + activeCellSize.value);\n\n    // Only constrain the touch position while the finger is on the screen. This allows the active cell\n    // to snap above/below the fold once let go, if the drag ends at the top/bottom of the screen.\n    const constrainedBase = isTouchActiveNative.value\n      ? constrained - activeCellOffset.value\n      : touchPositionDiff.value;\n\n    // Make sure item is constrained to the boundaries of the scrollview\n    return Math.min(\n      Math.max(constrainedBase, maxTranslateNegative),\n      maxTranslatePositive\n    );\n  }, []);\n\n  const hoverAnim = useDerivedValue(() => {\n    if (activeIndexAnim.value < 0) return 0;\n    return props.dragItemOverflow\n      ? touchPositionDiff.value\n      : touchPositionDiffConstrained.value;\n  }, []);\n\n  const hoverOffset = useDerivedValue(() => {\n    return hoverAnim.value + activeCellOffset.value;\n  }, [hoverAnim, activeCellOffset]);\n\n  useDerivedValue(() => {\n    // Reset spacer index when we stop hovering\n    const isHovering = activeIndexAnim.value >= 0;\n    if (!isHovering && spacerIndexAnim.value >= 0) {\n      spacerIndexAnim.value = -1;\n    }\n  }, []);\n\n  // Note: this could use a refactor as it combines touch state + cell animation\n  const resetTouchedCell = useCallback(() => {\n    activeCellOffset.value = 0;\n    hasMoved.value = 0;\n  }, []);\n\n  const value = useMemo(\n    () => ({\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      autoScrollDistance,\n      viewableIndexMin,\n      viewableIndexMax,\n    }),\n    [\n      activeCellOffset,\n      activeCellSize,\n      activeIndexAnim,\n      containerSize,\n      disabled,\n      horizontalAnim,\n      hoverAnim,\n      hoverOffset,\n      isDraggingCell,\n      isTouchActiveNative,\n      panGestureState,\n      placeholderOffset,\n      resetTouchedCell,\n      scrollOffset,\n      scrollViewSize,\n      spacerIndexAnim,\n      touchPositionDiff,\n      touchTranslate,\n      autoScrollDistance,\n      viewableIndexMin,\n      viewableIndexMax,\n    ]\n  );\n\n  useEffect(() => {\n    props.onAnimValInit?.(value);\n  }, [value]);\n\n  return value;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}