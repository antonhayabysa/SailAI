{"ast":null,"code":"import React, { useMemo } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateProgress } from \"../../store/progress-slice\";\nimport styles from \"./styles\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ProgressTracking(_ref) {\n  var _ref$keySuffix = _ref.keySuffix,\n    keySuffix = _ref$keySuffix === void 0 ? \"\" : _ref$keySuffix,\n    progressData = _ref.progressData;\n  var progressValue = useSelector(function (state) {\n    return state.progress.progressValue;\n  });\n  var dispatch = useDispatch();\n  var componentKey = useMemo(function () {\n    return `ProgressTracking_${progressValue}_${keySuffix}`;\n  }, [progressValue, keySuffix]);\n  var formattedProgressValue = progressValue.toFixed(2);\n  var handleUpdateProgress = function handleUpdateProgress() {\n    var progress = Math.random() * 100;\n    dispatch(updateProgress({\n      topicName: \"Topic 1\",\n      progress: progress\n    }));\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.topic,\n      children: [\"Total Progress: \", formattedProgressValue, \"%\"]\n    }), _jsx(Button, {\n      title: \"Update Total Progress\",\n      onPress: handleUpdateProgress\n    })]\n  }, componentKey);\n}","map":{"version":3,"names":["React","useMemo","View","Text","Button","useSelector","useDispatch","updateProgress","styles","jsxs","_jsxs","jsx","_jsx","ProgressTracking","_ref","_ref$keySuffix","keySuffix","progressData","progressValue","state","progress","dispatch","componentKey","formattedProgressValue","toFixed","handleUpdateProgress","Math","random","topicName","style","container","children","topic","title","onPress"],"sources":["/Users/big/Appinbox-projects/SailAI/src/components/progress-tracking/progress-tracking.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport { View, Text, Button } from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../store\";\nimport { updateProgress } from \"../../store/progress-slice\";\nimport styles from \"./styles\";\n\nexport default function ProgressTracking({ keySuffix = \"\", progressData }) {\n  const progressValue = useSelector(\n    (state: RootState) => state.progress.progressValue\n  );\n  const dispatch = useDispatch();\n\n  const componentKey = useMemo(\n    () => `ProgressTracking_${progressValue}_${keySuffix}`,\n    [progressValue, keySuffix]\n  );\n\n  const formattedProgressValue = progressValue.toFixed(2);\n\n  const handleUpdateProgress = () => {\n    const progress = Math.random() * 100;\n    dispatch(updateProgress({ topicName: \"Topic 1\", progress }));\n  };\n\n  return (\n    <View key={componentKey} style={styles.container}>\n      <Text style={styles.topic}>\n        Total Progress: {formattedProgressValue}%\n      </Text>\n      <Button title=\"Update Total Progress\" onPress={handleUpdateProgress} />\n    </View>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAEvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,cAAc;AACvB,OAAOC,MAAM;AAAiB,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE9B,eAAe,SAASC,gBAAgBA,CAAAC,IAAA,EAAmC;EAAA,IAAAC,cAAA,GAAAD,IAAA,CAAhCE,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,EAAE,GAAAA,cAAA;IAAEE,YAAY,GAAAH,IAAA,CAAZG,YAAY;EACrE,IAAMC,aAAa,GAAGb,WAAW,CAC/B,UAACc,KAAgB;IAAA,OAAKA,KAAK,CAACC,QAAQ,CAACF,aAAa;EAAA,CACpD,CAAC;EACD,IAAMG,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,IAAMgB,YAAY,GAAGrB,OAAO,CAC1B;IAAA,OAAO,oBAAmBiB,aAAc,IAAGF,SAAU,EAAC;EAAA,GACtD,CAACE,aAAa,EAAEF,SAAS,CAC3B,CAAC;EAED,IAAMO,sBAAsB,GAAGL,aAAa,CAACM,OAAO,CAAC,CAAC,CAAC;EAEvD,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAA,EAAS;IACjC,IAAML,QAAQ,GAAGM,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;IACpCN,QAAQ,CAACd,cAAc,CAAC;MAAEqB,SAAS,EAAE,SAAS;MAAER,QAAQ,EAARA;IAAS,CAAC,CAAC,CAAC;EAC9D,CAAC;EAED,OACEV,KAAA,CAACR,IAAI;IAAoB2B,KAAK,EAAErB,MAAM,CAACsB,SAAU;IAAAC,QAAA,GAC/CrB,KAAA,CAACP,IAAI;MAAC0B,KAAK,EAAErB,MAAM,CAACwB,KAAM;MAAAD,QAAA,GAAC,kBACT,EAACR,sBAAsB,EAAC,GAC1C;IAAA,CAAM,CAAC,EACPX,IAAA,CAACR,MAAM;MAAC6B,KAAK,EAAC,uBAAuB;MAACC,OAAO,EAAET;IAAqB,CAAE,CAAC;EAAA,GAJ9DH,YAKL,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}