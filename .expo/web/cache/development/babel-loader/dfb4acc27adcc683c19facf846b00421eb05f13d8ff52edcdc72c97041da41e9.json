{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useMemo, useRef, useState } from \"react\";\nimport { useSharedValue } from \"react-native-reanimated\";\nvar NestableScrollContainerContext = React.createContext(undefined);\nfunction useSetupNestableScrollContextValue(_ref) {\n  var forwardedRef = _ref.forwardedRef;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    outerScrollEnabled = _useState2[0],\n    setOuterScrollEnabled = _useState2[1];\n  var scrollViewSize = useSharedValue(0);\n  var scrollableRefInner = useRef(null);\n  var scrollableRef = forwardedRef || scrollableRefInner;\n  var outerScrollOffset = useSharedValue(0);\n  var containerSize = useSharedValue(0);\n  var contextVal = useMemo(function () {\n    return {\n      outerScrollEnabled: outerScrollEnabled,\n      setOuterScrollEnabled: setOuterScrollEnabled,\n      outerScrollOffset: outerScrollOffset,\n      scrollViewSize: scrollViewSize,\n      scrollableRef: scrollableRef,\n      containerSize: containerSize\n    };\n  }, [outerScrollEnabled]);\n  return contextVal;\n}\nexport function NestableScrollContainerProvider(_ref2) {\n  var children = _ref2.children,\n    forwardedRef = _ref2.forwardedRef;\n  var contextVal = useSetupNestableScrollContextValue({\n    forwardedRef: forwardedRef\n  });\n  return React.createElement(NestableScrollContainerContext.Provider, {\n    value: contextVal\n  }, children);\n}\nexport function useNestableScrollContainerContext() {\n  var value = useContext(NestableScrollContainerContext);\n  return value;\n}\nexport function useSafeNestableScrollContainerContext() {\n  var value = useNestableScrollContainerContext();\n  if (!value) {\n    throw new Error(\"useSafeNestableScrollContainerContext must be called within a NestableScrollContainerContext.Provider\");\n  }\n  return value;\n}","map":{"version":3,"names":["React","useContext","useMemo","useRef","useState","useSharedValue","NestableScrollContainerContext","createContext","undefined","useSetupNestableScrollContextValue","_ref","forwardedRef","_useState","_useState2","_slicedToArray","outerScrollEnabled","setOuterScrollEnabled","scrollViewSize","scrollableRefInner","scrollableRef","outerScrollOffset","containerSize","contextVal","NestableScrollContainerProvider","_ref2","children","createElement","Provider","value","useNestableScrollContainerContext","useSafeNestableScrollContainerContext","Error"],"sources":["/Users/big/Appinbox-projects/SailAI/node_modules/react-native-draggable-flatlist/lib/module/context/nestableScrollContainerContext.tsx"],"sourcesContent":["import React, { useContext, useMemo, useRef, useState } from \"react\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport Animated, { useSharedValue } from \"react-native-reanimated\";\n\ntype NestableScrollContainerContextVal = ReturnType<\n  typeof useSetupNestableScrollContextValue\n>;\nconst NestableScrollContainerContext = React.createContext<\n  NestableScrollContainerContextVal | undefined\n>(undefined);\n\nfunction useSetupNestableScrollContextValue({\n  forwardedRef,\n}: {\n  forwardedRef?: React.MutableRefObject<ScrollView>;\n}) {\n  const [outerScrollEnabled, setOuterScrollEnabled] = useState(true);\n  const scrollViewSize = useSharedValue(0);\n  const scrollableRefInner = useRef<ScrollView>(null);\n  const scrollableRef = forwardedRef || scrollableRefInner;\n  const outerScrollOffset = useSharedValue(0);\n  const containerSize = useSharedValue(0);\n\n  const contextVal = useMemo(\n    () => ({\n      outerScrollEnabled,\n      setOuterScrollEnabled,\n      outerScrollOffset,\n      scrollViewSize,\n      scrollableRef,\n      containerSize,\n    }),\n    [outerScrollEnabled]\n  );\n\n  return contextVal;\n}\n\nexport function NestableScrollContainerProvider({\n  children,\n  forwardedRef,\n}: {\n  children: React.ReactNode;\n  forwardedRef?: React.MutableRefObject<ScrollView>;\n}) {\n  const contextVal = useSetupNestableScrollContextValue({ forwardedRef });\n  return (\n    <NestableScrollContainerContext.Provider value={contextVal}>\n      {children}\n    </NestableScrollContainerContext.Provider>\n  );\n}\n\nexport function useNestableScrollContainerContext() {\n  const value = useContext(NestableScrollContainerContext);\n  return value;\n}\n\nexport function useSafeNestableScrollContainerContext() {\n  const value = useNestableScrollContainerContext();\n  if (!value) {\n    throw new Error(\n      \"useSafeNestableScrollContainerContext must be called within a NestableScrollContainerContext.Provider\"\n    );\n  }\n  return value;\n}\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,EAAqCC,MAArC,EAA6CC,QAA7C,QAA6D,OAA7D;AAEA,SAAmBC,cAAnB,QAAyC,yBAAzC;AAKA,IAAMC,8BAA8B,GAAGN,KAAK,CAACO,aAAN,CAErCC,SAFqC,CAAvC;AAIA,SAASC,kCAATA,CAAAC,IAAA,EAIG;EAAA,IAHDC,YAAA,GAGCD,IAAA,CAHDC,YAAA;EAIA,IAAAC,SAAA,GAAoDR,QAAQ,CAAC,IAAD,CAA5D;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAOG,kBAAD,GAAAF,UAAA;IAAqBG,qBAArB,GAAAH,UAAA;EACN,IAAMI,cAAc,GAAGZ,cAAc,CAAC,CAAD,CAArC;EACA,IAAMa,kBAAkB,GAAGf,MAAM,CAAa,IAAb,CAAjC;EACA,IAAMgB,aAAa,GAAGR,YAAY,IAAIO,kBAAtC;EACA,IAAME,iBAAiB,GAAGf,cAAc,CAAC,CAAD,CAAxC;EACA,IAAMgB,aAAa,GAAGhB,cAAc,CAAC,CAAD,CAApC;EAEA,IAAMiB,UAAU,GAAGpB,OAAO,CACxB;IAAA,OAAO;MACLa,kBADK,EACLA,kBADK;MAELC,qBAFK,EAELA,qBAFK;MAGLI,iBAHK,EAGLA,iBAHK;MAILH,cAJK,EAILA,cAJK;MAKLE,aALK,EAKLA,aALK;MAMLE,aAAA,EAAAA;IANK,CAAP;EAAA,CADwB,EASxB,CAACN,kBAAD,CATwB,CAA1B;EAYA,OAAOO,UAAP;AACD;AAED,OAAO,SAASC,+BAATA,CAAAC,KAAA,EAMJ;EAAA,IALDC,QAD8C,GAM7CD,KAAA,CALDC,QAD8C;IAE9Cd,YAAA,GAICa,KAAA,CAJDb,YAAA;EAKA,IAAMW,UAAU,GAAGb,kCAAkC,CAAC;IAAEE,YAAA,EAAAA;EAAF,CAAD,CAArD;EACA,OACEX,KAAA,CAAA0B,aAAA,CAACpB,8BAAD,CAAgCqB,QAAhC;IAAyCC,KAAK,EAAEN;EAAhD,GACGG,QADH,CADF;AAKD;AAED,OAAO,SAASI,iCAATA,CAAA,EAA6C;EAClD,IAAMD,KAAK,GAAG3B,UAAU,CAACK,8BAAD,CAAxB;EACA,OAAOsB,KAAP;AACD;AAED,OAAO,SAASE,qCAATA,CAAA,EAAiD;EACtD,IAAMF,KAAK,GAAGC,iCAAiC,EAA/C;EACA,IAAI,CAACD,KAAL,EAAY;IACV,MAAM,IAAIG,KAAJ,CACJ,uGADI,CAAN;EAGD;EACD,OAAOH,KAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}