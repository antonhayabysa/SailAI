{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateProgress } from \"../../store/progress-slice\";\nimport styles from \"./styles\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ProgressTracking() {\n  var topics = useSelector(function (state) {\n    return state.progress.topics;\n  });\n  var dispatch = useDispatch();\n  var handleUpdateProgress = function handleUpdateProgress(topicName, progress) {\n    dispatch(updateProgress({\n      topicName: topicName,\n      progress: progress\n    }));\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: topics.map(function (topic, index) {\n      return _jsxs(View, {\n        style: styles.topicContainer,\n        children: [_jsxs(Text, {\n          style: styles.topic,\n          children: [topic.name, \": \", topic.progress.toFixed(2), \"%\", \" \"]\n        }), _jsx(Button, {\n          title: \"Update Progress\",\n          onPress: function onPress() {\n            var progress = Math.random() * 100;\n            handleUpdateProgress(topic.name, progress);\n          }\n        })]\n      }, index);\n    })\n  });\n}","map":{"version":3,"names":["React","View","Text","Button","useSelector","useDispatch","updateProgress","styles","jsxs","_jsxs","jsx","_jsx","ProgressTracking","topics","state","progress","dispatch","handleUpdateProgress","topicName","style","container","children","map","topic","index","topicContainer","name","toFixed","title","onPress","Math","random"],"sources":["/Users/big/Appinbox-projects/SailAI/src/components/progress-tracking/progress-tracking.tsx"],"sourcesContent":["// ProgressTracking.js\nimport React from \"react\";\nimport { View, Text, Button } from \"react-native\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../store\";\nimport { updateProgress } from \"../../store/progress-slice\";\nimport styles from \"./styles\";\n\nexport default function ProgressTracking() {\n  const topics = useSelector((state: RootState) => state.progress.topics);\n  const dispatch = useDispatch();\n\n  const handleUpdateProgress = (topicName: string, progress: number) => {\n    dispatch(updateProgress({ topicName, progress }));\n  };\n\n  return (\n    <View style={styles.container}>\n      {topics.map((topic, index) => (\n        <View key={index} style={styles.topicContainer}>\n          <Text style={styles.topic}>\n            {topic.name}: {topic.progress.toFixed(2)}%{\" \"}\n          </Text>\n          <Button\n            title=\"Update Progress\"\n            onPress={() => {\n              const progress = Math.random() * 100;\n              handleUpdateProgress(topic.name, progress);\n            }}\n          />\n        </View>\n      ))}\n    </View>\n  );\n}\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAE1B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,cAAc;AACvB,OAAOC,MAAM;AAAiB,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE9B,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EACzC,IAAMC,MAAM,GAAGT,WAAW,CAAC,UAACU,KAAgB;IAAA,OAAKA,KAAK,CAACC,QAAQ,CAACF,MAAM;EAAA,EAAC;EACvE,IAAMG,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,IAAMY,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIC,SAAiB,EAAEH,QAAgB,EAAK;IACpEC,QAAQ,CAACV,cAAc,CAAC;MAAEY,SAAS,EAATA,SAAS;MAAEH,QAAQ,EAARA;IAAS,CAAC,CAAC,CAAC;EACnD,CAAC;EAED,OACEJ,IAAA,CAACV,IAAI;IAACkB,KAAK,EAAEZ,MAAM,CAACa,SAAU;IAAAC,QAAA,EAC3BR,MAAM,CAACS,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;MAAA,OACvBf,KAAA,CAACR,IAAI;QAAakB,KAAK,EAAEZ,MAAM,CAACkB,cAAe;QAAAJ,QAAA,GAC7CZ,KAAA,CAACP,IAAI;UAACiB,KAAK,EAAEZ,MAAM,CAACgB,KAAM;UAAAF,QAAA,GACvBE,KAAK,CAACG,IAAI,EAAC,IAAE,EAACH,KAAK,CAACR,QAAQ,CAACY,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC,EAAC,GAAG;QAAA,CAC1C,CAAC,EACPhB,IAAA,CAACR,MAAM;UACLyB,KAAK,EAAC,iBAAiB;UACvBC,OAAO,EAAE,SAAAA,QAAA,EAAM;YACb,IAAMd,QAAQ,GAAGe,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;YACpCd,oBAAoB,CAACM,KAAK,CAACG,IAAI,EAAEX,QAAQ,CAAC;UAC5C;QAAE,CACH,CAAC;MAAA,GAVOS,KAWL,CAAC;IAAA,CACR;EAAC,CACE,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}